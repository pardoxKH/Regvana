# Generated by Django 5.2 on 2025-04-11 18:03

from django.db import migrations

def update_article_types(apps, schema_editor):
    Article = apps.get_model('core', 'Article')
    
    # Update articles based on their titles and content
    for article in Article.objects.all():
        title_lower = article.title.lower()
        content_lower = article.content.lower()
        
        # Check for keywords to determine type
        if any(keyword in title_lower or keyword in content_lower 
               for keyword in ['guideline', 'guide', 'recommendation', 'suggestion']):
            article.type = 'guideline'
        elif any(keyword in title_lower or keyword in content_lower 
                for keyword in ['rule', 'requirement', 'must', 'shall', 'mandatory']):
            article.type = 'rule'
        else:
            # Default to regulation if no specific keywords found
            article.type = 'regulation'
        
        article.save()

def reverse_update_article_types(apps, schema_editor):
    Article = apps.get_model('core', 'Article')
    # Set all articles back to default type
    Article.objects.all().update(type='regulation')

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_article_type'),
    ]

    operations = [
        migrations.RunPython(update_article_types, reverse_update_article_types),
    ]
