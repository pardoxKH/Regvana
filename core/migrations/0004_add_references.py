# Generated by Django 5.2 on 2025-04-11 18:15

from django.db import migrations, models

def backup_and_recreate_articles(apps, schema_editor):
    Regulation = apps.get_model('core', 'Regulation')
    Article = apps.get_model('core', 'Article')
    
    # Backup existing articles
    articles_data = []
    for article in Article.objects.all():
        articles_data.append({
            'regulation': article.regulation,
            'title': article.title,
            'content': article.content,
            'type': article.type,
            'reference': str(article.order),  # Use the old order as reference
            'date_created': article.date_created,
            'last_updated': article.last_updated,
        })
    
    # Delete all existing articles
    Article.objects.all().delete()
    
    # Recreate articles with new schema
    for data in articles_data:
        Article.objects.create(**data)

def generate_regulation_references(apps, schema_editor):
    Regulation = apps.get_model('core', 'Regulation')
    for i, regulation in enumerate(Regulation.objects.all(), 1):
        regulation.reference = f'REG-2024-{i:03d}'
        regulation.save()

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_update_article_types'),
    ]

    operations = [
        # Add reference field to Regulation
        migrations.AddField(
            model_name='regulation',
            name='reference',
            field=models.CharField(null=True, blank=True, max_length=50, help_text='Unique reference number for the regulation'),
        ),
        
        # Generate regulation references
        migrations.RunPython(generate_regulation_references),
        
        # Make regulation reference required and unique
        migrations.AlterField(
            model_name='regulation',
            name='reference',
            field=models.CharField(unique=True, max_length=50, help_text='Unique reference number for the regulation', default='REG-2024-001'),
        ),
        
        # Delete the Article table
        migrations.RemoveField(
            model_name='article',
            name='regulation',
        ),
        migrations.DeleteModel(
            name='Article',
        ),
        
        # Recreate the Article model
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('type', models.CharField(choices=[('regulation', 'Regulation'), ('rule', 'Rule'), ('guideline', 'Guideline')], default='regulation', max_length=50)),
                ('reference', models.CharField(default='1', help_text='Reference number for the article', max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('regulation', models.ForeignKey(on_delete=models.deletion.CASCADE, related_name='articles', to='core.regulation')),
            ],
            options={
                'ordering': ['reference'],
                'unique_together': {('regulation', 'reference')},
            },
        ),
        
        # Run data migration to recreate articles
        migrations.RunPython(backup_and_recreate_articles),
    ]
